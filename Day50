https://leetcode.com/problems/intersection-of-two-arrays/submissions/1199229758/
https://leetcode.com/contest/weekly-contest-388/problems/apple-redistribution-into-boxes/

class Solution {
public:
    vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
        std::unordered_set<int> set1(nums1.begin(), nums1.end());
        std::unordered_set<int> set2(nums2.begin(), nums2.end());

        std::vector<int> result;
        for (const auto& num : set1) {
            if (set2.find(num) != set2.end()) {
                result.push_back(num);
            }
        }

        return result;
    }
};



class Solution {
public:
    static bool cmp(int num1,int num2){
        return num1>num2;
    }
    int minimumBoxes(vector<int>& apple, vector<int>& capacity) {
        sort(capacity.begin(),capacity.end(),cmp);
        int sum = 0;
        for(auto it:apple){
            sum+=it;
        }
        int cnt = 0;
        int i = 0;
        while(sum>0){
            cnt++;
            try{
                if(i>capacity.size()-1){
                    throw i;
                }
                sum-=capacity[i];
            }
            catch(int i){
                return -1;
            }
            i++;
        }
        return cnt;
    }
};
